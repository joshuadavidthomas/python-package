name: test

on:
  push:
    branches: main
  pull_request:

concurrency:
  {% raw %}group: test-${{ github.head_ref }}{% endraw %}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  test:
    {% raw %}name: Python ${{ matrix.python-version }}, Django ${{ matrix.django-version }}{% endraw %}
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        python-version: {cookiecutter.python_versions}
        django-version: {cookiecutter.django_versions}
    steps:
    - uses: actions/checkout@v4

    {% raw %}- name: Set up Python ${{ matrix.python-version }}{% endraw %}
      uses: actions/setup-python@v4
      with:
        {% raw %}python-version: ${{ matrix.python-version }}{% endraw %}
        cache: 'pip'
        allow-prereleases: true

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip nox

    - name: Run tests
      run: |
        {% raw %}python -m nox --session "tests-${{ matrix.python-version }}(django='${{ matrix.django-version }}')"{% endraw %}

  tests:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
    - name: OK
      {% raw %}if: ${{ !(contains(needs.*.result, 'failure')) }}{% endraw %}
      run: |
        exit 0

    - name: Fail
      {% raw %}if: ${{ contains(needs.*.result, 'failure') }}{% endraw %}
      run: |
        exit 1

  types:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: wntrblm/nox@main
      with:
        python-versions: "{cookiecutter.python_min_version}"

    - name: Run mypy
      run: |
        nox --session mypy

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: wntrblm/nox@main
      with:
        python-versions: "{cookiecutter.python_min_version}"

    - name: Run coverage
      run: |
        nox --session coverage
